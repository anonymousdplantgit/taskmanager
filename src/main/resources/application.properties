server.port=8086


logging.config=classpath:logback.xml

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL82Dialect
# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.driver-class-name:com.mysql.jdbc.Driver

#spring.datasource.url=jdbc:postgresql://ec2-54-243-214-198.compute-1.amazonaws.com:5432/df98kkb4av7jhr

#PROD
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}

#DEV
#spring.datasource.url=jdbc:postgresql://localhost:5432/taskmanager
#spring.datasource.username=postgres
#spring.datasource.password=root


# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false
# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user_sec where email=?
spring.queries.roles-query=select u.email, r.role from user_sec u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
